# Generated by Django 5.2.1 on 2025-05-22 09:56

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationDestination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('type', models.CharField(choices=[('email', 'Email'), ('webhook', 'Webhook'), ('slack', 'Slack'), ('mattermost', 'Mattermost'), ('custom_http', 'Custom HTTP Request')], max_length=20, verbose_name='Type')),
                ('config', models.JSONField(help_text='JSON configuration for the destination', verbose_name='Configuration')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_destinations', to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Notification Destination',
                'verbose_name_plural': 'Notification Destinations',
                'ordering': ['name'],
                'unique_together': {('name', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='NotificationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(max_length=50, verbose_name='Source ID')),
                ('source_type', models.CharField(max_length=50, verbose_name='Source Type')),
                ('event_type', models.CharField(max_length=50, verbose_name='Event Type')),
                ('event_data', models.JSONField(default=dict, verbose_name='Event Data')),
                ('processed', models.BooleanField(default=False, verbose_name='Processed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_events', to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Notification Event',
                'verbose_name_plural': 'Notification Events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('source', models.CharField(choices=[('alert', 'Alert'), ('case', 'Case'), ('task', 'Task'), ('observable', 'Observable'), ('system', 'System')], max_length=20, verbose_name='Source')),
                ('event_type', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('status_changed', 'Status Changed'), ('assigned', 'Assigned'), ('alert_severity_changed', 'Severity Changed'), ('alert_escalated', 'Escalated to Case'), ('case_priority_changed', 'Priority Changed'), ('case_comment_added', 'Comment Added'), ('case_attachment_added', 'Attachment Added'), ('task_completed', 'Task Completed'), ('task_overdue', 'Task Overdue'), ('observable_malicious_added', 'Malicious Observable Added'), ('observable_enriched', 'Observable Enriched'), ('system_database_backup', 'Database Backup Completed'), ('system_error', 'System Error'), ('system_user_login_failed', 'User Login Failed')], max_length=50, verbose_name='Event Type')),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='JSON conditions that must be met to trigger notification', verbose_name='Conditions')),
                ('template_subject', models.CharField(blank=True, help_text='Template for notification subject with variables like {{case.title}}', max_length=255, verbose_name='Template Subject')),
                ('template_body', models.TextField(blank=True, help_text='Template for notification body with variables like {{case.description}}', verbose_name='Template Body')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('destinations', models.ManyToManyField(related_name='rules', to='notifications.notificationdestination', verbose_name='Destinations')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_rules', to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Notification Rule',
                'verbose_name_plural': 'Notification Rules',
                'ordering': ['source', 'event_type', 'name'],
                'unique_together': {('name', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_data', models.JSONField(blank=True, default=dict, verbose_name='Event Data')),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('pending', 'Pending')], default='pending', max_length=10, verbose_name='Status')),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('body', models.TextField(verbose_name='Body')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent at')),
                ('tracking_id', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Tracking ID')),
                ('destination', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='notifications.notificationdestination', verbose_name='Destination')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to='organizations.organization')),
                ('rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='notifications.notificationrule', verbose_name='Notification Rule')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'ordering': ['-created_at'],
            },
        ),
    ]
